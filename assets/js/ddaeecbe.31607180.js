"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8222],{1478:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(4848),i=r(8453),c=r(1470),a=r(9365);const o={sidebar_label:"Git Graph"},u=void 0,l={id:"Graphs/Git",title:"Git",description:"The following classes can be useful when creating gitgraph diagrams:",source:"@site/docs/Graphs/Git.mdx",sourceDirName:"Graphs",slug:"/Graphs/Git",permalink:"/Siren/docs/Graphs/Git",draft:!1,unlisted:!1,editUrl:"https://github.com/Freymaurer/Siren/tree/main/docs/docs/Graphs/Git.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Git Graph"},sidebar:"docsSidebar",previous:{title:"Gantt",permalink:"/Siren/docs/Graphs/Gantt"},next:{title:"User Journey",permalink:"/Siren/docs/Graphs/Journey"}},h={},s=[{value:"Repository",id:"repository",level:2}];function g(e){const t={code:"code",h2:"h2",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"The following classes can be useful when creating gitgraph diagrams:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"siren"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"git"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"gitType"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"gitTheme"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"gitGraphConfig"})}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"repository",children:"Repository"}),"\n",(0,n.jsxs)(c.A,{groupId:"preferred-lang",queryString:!0,children:[(0,n.jsx)(a.A,{value:"fsharp",label:"F#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-fsharp",children:'let hotfix, develop, featureA, featureB, main, release = "hotfix", "develop", "featureA", "featureB", "main", "release"\r\nsiren.git([\r\n    git.commit()\r\n    git.branch(hotfix)\r\n    git.checkout(hotfix)\r\n    git.commit()\r\n    git.branch(develop)\r\n    git.checkout(develop)\r\n    git.commit("ash",tag="abc")\r\n    git.branch(featureB)\r\n    git.checkout(featureB)\r\n    git.commit(gitType=gitType.highlight)\r\n    git.checkout(main)\r\n    git.checkout(hotfix)\r\n    git.commit(gitType=gitType.normal)\r\n    git.checkout(develop)\r\n    git.commit(gitType=gitType.reverse)\r\n    git.checkout(featureB)\r\n    git.commit()\r\n    git.checkout(main)\r\n    git.merge(hotfix)\r\n    git.checkout(featureB)\r\n    git.commit()\r\n    git.checkout(develop)\r\n    git.branch(featureA)\r\n    git.commit()\r\n    git.checkout(develop)\r\n    git.merge(hotfix)\r\n    git.checkout(featureA)\r\n    git.commit()\r\n    git.checkout(featureB)\r\n    git.commit()\r\n    git.checkout(develop)\r\n    git.merge(featureA)\r\n    git.branch(release)\r\n    git.checkout(release)\r\n    git.commit()\r\n    git.checkout(main)\r\n    git.commit()\r\n    git.checkout(release)\r\n    git.merge(main)\r\n    git.checkout(develop)\r\n    git.merge(release)\r\n])\r\n    .withTheme(theme.``base``)\r\n    .addGraphConfigVariable(gitGraphConfig.showBranches false)\r\n    .write()\n'})})}),(0,n.jsx)(a.A,{value:"csharp",label:"C#",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:'(string hotfix, string develop, string featureA, string featureB, string main, string release) = ("hotfix", "develop", "featureA", "featureB", "main", "release");\r\nstring actual =\r\n    siren.git([\r\n        git.commit(),\r\n        git.branch(hotfix),\r\n        git.checkout(hotfix),\r\n        git.commit(),\r\n        git.branch(develop),\r\n        git.checkout(develop),\r\n        git.commit("ash",tag: "abc"),\r\n        git.branch(featureB),\r\n        git.checkout(featureB),\r\n        git.commit(gitType: gitType.highlight),\r\n        git.checkout(main),\r\n        git.checkout(hotfix),\r\n        git.commit(gitType: gitType.normal),\r\n        git.checkout(develop),\r\n        git.commit(gitType: gitType.reverse),\r\n        git.checkout(featureB),\r\n        git.commit(),\r\n        git.checkout(main),\r\n        git.merge(hotfix),\r\n        git.checkout(featureB),\r\n        git.commit(),\r\n        git.checkout(develop),\r\n        git.branch(featureA),\r\n        git.commit(),\r\n        git.checkout(develop),\r\n        git.merge(hotfix),\r\n        git.checkout(featureA),\r\n        git.commit(),\r\n        git.checkout(featureB),\r\n        git.commit(),\r\n        git.checkout(develop),\r\n        git.merge(featureA),\r\n        git.branch(release),\r\n        git.checkout(release),\r\n        git.commit(),\r\n        git.checkout(main),\r\n        git.commit(),\r\n        git.checkout(release),\r\n        git.merge(main),\r\n        git.checkout(develop),\r\n        git.merge(release),\r\n    ])\r\n        .withTheme(theme.@base)\r\n        .addGraphConfigVariable(gitGraphConfig.showBranches(false))\r\n        .write();\n'})})}),(0,n.jsx)(a.A,{value:"py",label:"Python",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-py",children:'hotfix, develop, featureA, featureB, main, release = "hotfix", "develop", "featureA", "featureB", "main", "release"\r\nactual = (\r\n    siren.git([\r\n        git.commit(),\r\n        git.branch(hotfix),\r\n        git.checkout(hotfix),\r\n        git.commit(),\r\n        git.branch(develop),\r\n        git.checkout(develop),\r\n        git.commit("ash", tag = "abc"),\r\n        git.branch(featureB),\r\n        git.checkout(featureB),\r\n        git.commit(git_type = git_type.highlight()),\r\n        git.checkout(main),\r\n        git.checkout(hotfix),\r\n        git.commit(git_type = git_type.normal()),\r\n        git.checkout(develop),\r\n        git.commit(git_type = git_type.reverse()),\r\n        git.checkout(featureB),\r\n        git.commit(),\r\n        git.checkout(main),\r\n        git.merge(hotfix),\r\n        git.checkout(featureB),\r\n        git.commit(),\r\n        git.checkout(develop),\r\n        git.branch(featureA),\r\n        git.commit(),\r\n        git.checkout(develop),\r\n        git.merge(hotfix),\r\n        git.checkout(featureA),\r\n        git.commit(),\r\n        git.checkout(featureB),\r\n        git.commit(),\r\n        git.checkout(develop),\r\n        git.merge(featureA),\r\n        git.branch(release),\r\n        git.checkout(release),\r\n        git.commit(),\r\n        git.checkout(main),\r\n        git.commit(),\r\n        git.checkout(release),\r\n        git.merge(main),\r\n        git.checkout(develop),\r\n        git.merge(release),\r\n    ])\r\n        .with_theme(theme.base())\r\n        .add_graph_config_variable(git_graph_config.show_branches(False))\r\n        .write()\r\n)\n'})})}),(0,n.jsx)(a.A,{value:"js",label:"JavaScript",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:'const [hotfix, develop, featureA, featureB, main, release] = ["hotfix", "develop", "featureA", "featureB", "main", "release"];\r\nconst actual =\r\n    siren.git([\r\n      git.commit(),\r\n      git.branch(hotfix),\r\n      git.checkout(hotfix),\r\n      git.commit(),\r\n      git.branch(develop),\r\n      git.checkout(develop),\r\n      git.commit("ash",null,"abc"),\r\n      git.branch(featureB),\r\n      git.checkout(featureB),\r\n      git.commit(null, gitType.highlight),\r\n      git.checkout(main),\r\n      git.checkout(hotfix),\r\n      git.commit(null, gitType.normal),\r\n      git.checkout(develop),\r\n      git.commit(null, gitType.reverse),\r\n      git.checkout(featureB),\r\n      git.commit(),\r\n      git.checkout(main),\r\n      git.merge(hotfix),\r\n      git.checkout(featureB),\r\n      git.commit(),\r\n      git.checkout(develop),\r\n      git.branch(featureA),\r\n      git.commit(),\r\n      git.checkout(develop),\r\n      git.merge(hotfix),\r\n      git.checkout(featureA),\r\n      git.commit(),\r\n      git.checkout(featureB),\r\n      git.commit(),\r\n      git.checkout(develop),\r\n      git.merge(featureA),\r\n      git.branch(release),\r\n      git.checkout(release),\r\n      git.commit(),\r\n      git.checkout(main),\r\n      git.commit(),\r\n      git.checkout(release),\r\n      git.merge(main),\r\n      git.checkout(develop),\r\n      git.merge(release),\r\n  ])\r\n      .withTheme(theme.base)\r\n      .addGraphConfigVariable(gitGraphConfig.showBranches(false))\r\n      .write();\n'})})})]}),"\n","\n",(0,n.jsxs)(c.A,{children:[(0,n.jsx)(a.A,{value:"graph",label:"Graph",children:(0,n.jsx)(t.mermaid,{value:'---\r\nconfig:\r\n    theme: base\r\n    gitGraph:\r\n        showBranches: false\r\n---\r\ngitGraph\r\n    commit\r\n    branch hotfix\r\n    checkout hotfix\r\n    commit\r\n    branch develop\r\n    checkout develop\r\n    commit id: "ash" tag: "abc"\r\n    branch featureB\r\n    checkout featureB\r\n    commit type: HIGHLIGHT\r\n    checkout main\r\n    checkout hotfix\r\n    commit type: NORMAL\r\n    checkout develop\r\n    commit type: REVERSE\r\n    checkout featureB\r\n    commit\r\n    checkout main\r\n    merge hotfix\r\n    checkout featureB\r\n    commit\r\n    checkout develop\r\n    branch featureA\r\n    commit\r\n    checkout develop\r\n    merge hotfix\r\n    checkout featureA\r\n    commit\r\n    checkout featureB\r\n    commit\r\n    checkout develop\r\n    merge featureA\r\n    branch release\r\n    checkout release\r\n    commit\r\n    checkout main\r\n    commit\r\n    checkout release\r\n    merge main\r\n    checkout develop\r\n    merge release'})}),(0,n.jsx)(a.A,{value:"output",label:"Output",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yml",children:'---\r\nconfig:\r\n    theme: base\r\n    gitGraph:\r\n        showBranches: false\r\n---\r\ngitGraph\r\n    commit\r\n    branch hotfix\r\n    checkout hotfix\r\n    commit\r\n    branch develop\r\n    checkout develop\r\n    commit id: "ash" tag: "abc"\r\n    branch featureB\r\n    checkout featureB\r\n    commit type: HIGHLIGHT\r\n    checkout main\r\n    checkout hotfix\r\n    commit type: NORMAL\r\n    checkout develop\r\n    commit type: REVERSE\r\n    checkout featureB\r\n    commit\r\n    checkout main\r\n    merge hotfix\r\n    checkout featureB\r\n    commit\r\n    checkout develop\r\n    branch featureA\r\n    commit\r\n    checkout develop\r\n    merge hotfix\r\n    checkout featureA\r\n    commit\r\n    checkout featureB\r\n    commit\r\n    checkout develop\r\n    merge featureA\r\n    branch release\r\n    checkout release\r\n    commit\r\n    checkout main\r\n    commit\r\n    checkout release\r\n    merge main\r\n    checkout develop\r\n    merge release\n'})})})]})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}},9365:(e,t,r)=>{r.d(t,{A:()=>a});r(6540);var n=r(4164);const i={tabItem:"tabItem_Ymn6"};var c=r(4848);function a(e){let{children:t,hidden:r,className:a}=e;return(0,c.jsx)("div",{role:"tabpanel",className:(0,n.A)(i.tabItem,a),hidden:r,children:t})}},1470:(e,t,r)=>{r.d(t,{A:()=>A});var n=r(6540),i=r(4164),c=r(3104),a=r(6347),o=r(205),u=r(7485),l=r(1682),h=r(9466);function s(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function g(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return s(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:i}}=e;return{value:t,label:r,attributes:n,default:i}}))}(r);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function m(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function d(e){let{queryString:t=!1,groupId:r}=e;const i=(0,a.W6)(),c=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,u.aZ)(c),(0,n.useCallback)((e=>{if(!c)return;const t=new URLSearchParams(i.location.search);t.set(c,e),i.replace({...i.location,search:t.toString()})}),[c,i])]}function f(e){const{defaultValue:t,queryString:r=!1,groupId:i}=e,c=g(e),[a,u]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:c}))),[l,s]=d({queryString:r,groupId:i}),[f,p]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,c]=(0,h.Dv)(r);return[i,(0,n.useCallback)((e=>{r&&c.set(e)}),[r,c])]}({groupId:i}),k=(()=>{const e=l??f;return m({value:e,tabValues:c})?e:null})();(0,o.A)((()=>{k&&u(k)}),[k]);return{selectedValue:a,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:c}))throw new Error(`Can't select invalid tab value=${e}`);u(e),s(e),p(e)}),[s,p,c]),tabValues:c}}var p=r(2303);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=r(4848);function v(e){let{className:t,block:r,selectedValue:n,selectValue:a,tabValues:o}=e;const u=[],{blockElementScrollPositionUntilNextRender:l}=(0,c.a_)(),h=e=>{const t=e.currentTarget,r=u.indexOf(t),i=o[r].value;i!==n&&(l(t),a(i))},s=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const r=u.indexOf(e.currentTarget)+1;t=u[r]??u[0];break}case"ArrowLeft":{const r=u.indexOf(e.currentTarget)-1;t=u[r]??u[u.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},t),children:o.map((e=>{let{value:t,label:r,attributes:c}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>u.push(e),onKeyDown:s,onClick:h,...c,className:(0,i.A)("tabs__item",k.tabItem,c?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function x(e){let{lazy:t,children:r,selectedValue:i}=e;const c=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=c.find((e=>e.props.value===i));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:c.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function y(e){const t=f(e);return(0,b.jsxs)("div",{className:(0,i.A)("tabs-container",k.tabList),children:[(0,b.jsx)(v,{...e,...t}),(0,b.jsx)(x,{...e,...t})]})}function A(e){const t=(0,p.A)();return(0,b.jsx)(y,{...e,children:s(e.children)},String(t))}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var n=r(6540);const i={},c=n.createContext(i);function a(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);