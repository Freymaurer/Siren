"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1345],{3324:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>g});var n=a(4848),r=a(8453),s=a(1470),d=a(9365);const i={sidebar_label:"Gantt"},o=void 0,c={id:"Graphs/Gantt",title:"Gantt",description:"The following classes can be useful when creating gantt charts:",source:"@site/docs/Graphs/Gantt.mdx",sourceDirName:"Graphs",slug:"/Graphs/Gantt",permalink:"/Siren/docs/Graphs/Gantt",draft:!1,unlisted:!1,editUrl:"https://github.com/Freymaurer/Siren/tree/main/docs/docs/Graphs/Gantt.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Gantt"},sidebar:"docsSidebar",previous:{title:"Flowchart",permalink:"/Siren/docs/Graphs/FlowChart"},next:{title:"Git Graph",permalink:"/Siren/docs/Graphs/Git"}},l={},g=[{value:"Roadmap",id:"roadmap",level:2}];function u(t){const e={code:"code",h2:"h2",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:"The following classes can be useful when creating gantt charts:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"siren"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"gantt"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"ganttUnit"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"ganttTags"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"ganttTime"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.code,{children:"ganttConfig"})}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"roadmap",children:"Roadmap"}),"\n",(0,n.jsxs)(s.A,{groupId:"preferred-lang",queryString:!0,children:[(0,n.jsx)(d.A,{value:"fsharp",label:"F#",children:(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-fsharp",children:'let des1, isadded, a1, doc1 = "des1", "isadded", "a1", "doc1"\r\nsiren.gantt [\r\n    gantt.dateFormat "YYYY-MM-DD"\r\n    gantt.title "Adding GANTT diagram functionality to mermaid"\r\n    gantt.excludes "weekends"\r\n    gantt.comment """(`excludes` accepts specific dates in YYYY-MM-DD format, days of the week ("sunday") or "weekends", but not the word "weekdays".)"""\r\n\r\n    gantt.section "A section"\r\n    gantt.task("Completed task", des1, "2014-01-06", "2014-01-08", [ganttTags.``done``])\r\n    gantt.task("Active task", "des2", "2014-01-09", "3d", [ganttTags.active])\r\n    gantt.task("Future task", "des3", "after des2", "5d")\r\n    gantt.task("Future task2", "des4", "after des3", "5d")\r\n\r\n    gantt.section "section Critical tasks"\r\n    gantt.taskStartEnd("Completed task in the critical line", "2014-01-06", "24h", [ganttTags.``done``; ganttTags.crit])\r\n    gantt.taskStartEnd("Implement parser and jison", ganttTime.after des1, "2d", [ganttTags.``done``; ganttTags.crit])\r\n    gantt.taskEnd("Create tests for parser", "3d", [ganttTags.active; ganttTags.crit])\r\n    gantt.taskEnd("Future task in critical line", "2d", [ganttTags.crit])\r\n    gantt.taskEnd("Create tests for renderer", "2d")\r\n    gantt.taskEnd("Add to mermaid", ganttTime.until isadded)\r\n    gantt.milestone("Functionality added", isadded, "2014-01-25", "0d")\r\n\r\n    gantt.section "section Documentation"\r\n    gantt.task("Describe gantt syntax", a1, ganttTime.after des1, "3d", [ganttTags.active])\r\n    gantt.taskStartEnd("Add gantt diagram to demo page", ganttTime.after a1, "20h")\r\n    gantt.task("Add another diagram to demo page", doc1, ganttTime.after a1, "48h")\r\n\r\n    gantt.section "Last section"\r\n    gantt.taskStartEnd("Describe gantt syntax", ganttTime.after doc1, "3d")\r\n    gantt.taskEnd("Add gantt diagram to demo page", "20h")\r\n    gantt.taskEnd("Add another diagram to demo page", "48h")\r\n]\r\n|> siren.write\n'})})}),(0,n.jsx)(d.A,{value:"csharp",label:"C#",children:(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-csharp",children:'(string des1, string isadded, string a1, string doc1) = ("des1", "isadded", "a1", "doc1");\r\nstring actual =\r\n    siren.gantt([\r\n        gantt.dateFormat("YYYY-MM-DD"),\r\n        gantt.title("Adding GANTT diagram functionality to mermaid"),\r\n        gantt.excludes("weekends"),\r\n        gantt.comment("""(`excludes` accepts specific dates in YYYY-MM-DD format, days of the week ("sunday") or "weekends", but not the word "weekdays".)"""),\r\n\r\n        gantt.section ("A section"),\r\n        gantt.task("Completed task", des1, "2014-01-06", "2014-01-08", new GanttTags[] {ganttTags.done }),\r\n        gantt.task("Active task", "des2", "2014-01-09", "3d", new GanttTags[] {ganttTags.active}),\r\n        gantt.task("Future task", "des3", "after des2", "5d"),\r\n        gantt.task("Future task2", "des4", "after des3", "5d"),\r\n\r\n        gantt.section("section Critical tasks"),\r\n        gantt.taskStartEnd("Completed task in the critical line", "2014-01-06", "24h", new GanttTags[] { ganttTags.done, ganttTags.crit}),\r\n        gantt.taskStartEnd("Implement parser and jison", ganttTime.after(des1), "2d", new GanttTags[] { ganttTags.done, ganttTags.crit}),\r\n        gantt.taskEnd("Create tests for parser", "3d", new GanttTags[] { ganttTags.active, ganttTags.crit}),\r\n        gantt.taskEnd("Future task in critical line", "2d", new GanttTags[] { ganttTags.crit }),\r\n        gantt.taskEnd("Create tests for renderer", "2d"),\r\n        gantt.taskEnd("Add to mermaid", ganttTime.until(isadded)),\r\n        gantt.milestone("Functionality added", isadded, "2014-01-25", "0d"),\r\n\r\n        gantt.section("section Documentation"),\r\n        gantt.task("Describe gantt syntax", a1, ganttTime.after(des1), "3d", new GanttTags[] { ganttTags.active }),\r\n        gantt.taskStartEnd("Add gantt diagram to demo page", ganttTime.after (a1), "20h"),\r\n        gantt.task("Add another diagram to demo page", doc1, ganttTime.after (a1), "48h"),\r\n\r\n        gantt.section ("Last section"),\r\n        gantt.taskStartEnd("Describe gantt syntax", ganttTime.after (doc1), "3d"),\r\n        gantt.taskEnd("Add gantt diagram to demo page", "20h"),\r\n        gantt.taskEnd("Add another diagram to demo page", "48h")\r\n    ]).write();\n'})})}),(0,n.jsx)(d.A,{value:"py",label:"Python",children:(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-py",children:'des1, isadded, a1, doc1 = "des1", "isadded", "a1", "doc1"\r\nactual: str = (\r\n    siren.gantt([\r\n      gantt.date_format("YYYY-MM-DD"),\r\n      gantt.title("Adding GANTT diagram functionality to mermaid"),\r\n      gantt.excludes("weekends"),\r\n      gantt.comment("(`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\\"sunday\\") or \\"weekends\\", but not the word \\"weekdays\\".)"),\r\n      \r\n      gantt.section ("A section"),\r\n      gantt.task("Completed task", des1, "2014-01-06", "2014-01-08",[gantt_tags.done()]),\r\n      gantt.task("Active task", "des2", "2014-01-09", "3d", [gantt_tags.active()]),\r\n      gantt.task("Future task", "des3", "after des2", "5d"),\r\n      gantt.task("Future task2", "des4", "after des3", "5d"),\r\n      \r\n      gantt.section("section Critical tasks"),\r\n      gantt.task_start_end("Completed task in the critical line", "2014-01-06", "24h", [gantt_tags.done(), gantt_tags.crit()]),\r\n      gantt.task_start_end("Implement parser and jison", gantt_time.after(des1), "2d", [gantt_tags.done(), gantt_tags.crit()]),\r\n      gantt.task_end("Create tests for parser", "3d", [gantt_tags.active(), gantt_tags.crit()]),\r\n      gantt.task_end("Future task in critical line", "2d", [gantt_tags.crit() ]),\r\n      gantt.task_end("Create tests for renderer", "2d"),\r\n      gantt.task_end("Add to mermaid", gantt_time.until(isadded)),\r\n      gantt.milestone("Functionality added", isadded, "2014-01-25", "0d"),\r\n      \r\n      gantt.section("section Documentation"),\r\n      gantt.task("Describe gantt syntax", a1, gantt_time.after(des1), "3d", [gantt_tags.active()]),\r\n      gantt.task_start_end("Add gantt diagram to demo page", gantt_time.after (a1), "20h"),\r\n      gantt.task("Add another diagram to demo page", doc1, gantt_time.after (a1), "48h"),\r\n      \r\n      gantt.section ("Last section"),\r\n      gantt.task_start_end("Describe gantt syntax", gantt_time.after (doc1), "3d"),\r\n      gantt.task_end("Add gantt diagram to demo page", "20h"),\r\n      gantt.task_end("Add another diagram to demo page", "48h")\r\n    ]).write()\r\n)\n'})})}),(0,n.jsx)(d.A,{value:"js",label:"JavaScript",children:(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-js",children:'const [des1, isadded, a1, doc1] = ["des1", "isadded", "a1", "doc1"];\r\nconst actual = \r\n    siren.gantt([\r\n      gantt.dateFormat("YYYY-MM-DD"),\r\n      gantt.title("Adding GANTT diagram functionality to mermaid"),\r\n      gantt.excludes("weekends"),\r\n      gantt.comment("(`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\\"sunday\\") or \\"weekends\\", but not the word \\"weekdays\\".)"),\r\n      \r\n      gantt.section ("A section"),\r\n      gantt.task("Completed task", des1, "2014-01-06", "2014-01-08",[ganttTags.done]),\r\n      gantt.task("Active task", "des2", "2014-01-09", "3d", [ganttTags.active]),\r\n      gantt.task("Future task", "des3", "after des2", "5d"),\r\n      gantt.task("Future task2", "des4", "after des3", "5d"),\r\n      \r\n      gantt.section("section Critical tasks"),\r\n      gantt.taskStartEnd("Completed task in the critical line", "2014-01-06", "24h", [ganttTags.done, ganttTags.crit]),\r\n      gantt.taskStartEnd("Implement parser and jison", ganttTime.after(des1), "2d", [ganttTags.done, ganttTags.crit]),\r\n      gantt.taskEnd("Create tests for parser", "3d", [ganttTags.active, ganttTags.crit]),\r\n      gantt.taskEnd("Future task in critical line", "2d", [ganttTags.crit ]),\r\n      gantt.taskEnd("Create tests for renderer", "2d"),\r\n      gantt.taskEnd("Add to mermaid", ganttTime.until(isadded)),\r\n      gantt.milestone("Functionality added", isadded, "2014-01-25", "0d"),\r\n      \r\n      gantt.section("section Documentation"),\r\n      gantt.task("Describe gantt syntax", a1, ganttTime.after(des1), "3d", [ganttTags.active]),\r\n      gantt.taskStartEnd("Add gantt diagram to demo page", ganttTime.after (a1), "20h"),\r\n      gantt.task("Add another diagram to demo page", doc1, ganttTime.after (a1), "48h"),\r\n      \r\n      gantt.section ("Last section"),\r\n      gantt.taskStartEnd("Describe gantt syntax", ganttTime.after (doc1), "3d"),\r\n      gantt.taskEnd("Add gantt diagram to demo page", "20h"),\r\n      gantt.taskEnd("Add another diagram to demo page", "48h")\r\n    ]).write();\n'})})})]}),"\n","\n",(0,n.jsxs)(s.A,{children:[(0,n.jsx)(d.A,{value:"graph",label:"Graph",children:(0,n.jsx)(e.mermaid,{value:'gantt\r\n    dateFormat YYYY-MM-DD\r\n    title Adding GANTT diagram functionality to mermaid\r\n    excludes weekends\r\n    %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (""sunday"") or ""weekends"", but not the word ""weekdays"".)\r\n    section A section\r\n    Completed task : done, des1, 2014-01-06, 2014-01-08\r\n    Active task : active, des2, 2014-01-09, 3d\r\n    Future task : des3, after des2, 5d\r\n    Future task2 : des4, after des3, 5d\r\n    section section Critical tasks\r\n    Completed task in the critical line : done, crit, 2014-01-06, 24h\r\n    Implement parser and jison : done, crit, after des1, 2d\r\n    Create tests for parser : active, crit, 3d\r\n    Future task in critical line : crit, 2d\r\n    Create tests for renderer : 2d\r\n    Add to mermaid : until isadded\r\n    Functionality added : milestone, isadded, 2014-01-25, 0d\r\n    section section Documentation\r\n    Describe gantt syntax : active, a1, after des1, 3d\r\n    Add gantt diagram to demo page : after a1, 20h\r\n    Add another diagram to demo page : doc1, after a1, 48h\r\n    section Last section\r\n    Describe gantt syntax : after doc1, 3d\r\n    Add gantt diagram to demo page : 20h\r\n    Add another diagram to demo page : 48h'})}),(0,n.jsx)(d.A,{value:"output",label:"Output",children:(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-yml",children:'gantt\r\n    dateFormat YYYY-MM-DD\r\n    title Adding GANTT diagram functionality to mermaid\r\n    excludes weekends\r\n    %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (""sunday"") or ""weekends"", but not the word ""weekdays"".)\r\n    section A section\r\n    Completed task : done, des1, 2014-01-06, 2014-01-08\r\n    Active task : active, des2, 2014-01-09, 3d\r\n    Future task : des3, after des2, 5d\r\n    Future task2 : des4, after des3, 5d\r\n    section section Critical tasks\r\n    Completed task in the critical line : done, crit, 2014-01-06, 24h\r\n    Implement parser and jison : done, crit, after des1, 2d\r\n    Create tests for parser : active, crit, 3d\r\n    Future task in critical line : crit, 2d\r\n    Create tests for renderer : 2d\r\n    Add to mermaid : until isadded\r\n    Functionality added : milestone, isadded, 2014-01-25, 0d\r\n    section section Documentation\r\n    Describe gantt syntax : active, a1, after des1, 3d\r\n    Add gantt diagram to demo page : after a1, 20h\r\n    Add another diagram to demo page : doc1, after a1, 48h\r\n    section Last section\r\n    Describe gantt syntax : after doc1, 3d\r\n    Add gantt diagram to demo page : 20h\r\n    Add another diagram to demo page : 48h\n'})})})]})]})}function m(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(u,{...t})}):u(t)}},9365:(t,e,a)=>{a.d(e,{A:()=>d});a(6540);var n=a(4164);const r={tabItem:"tabItem_Ymn6"};var s=a(4848);function d(t){let{children:e,hidden:a,className:d}=t;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,d),hidden:a,children:e})}},1470:(t,e,a)=>{a.d(e,{A:()=>A});var n=a(6540),r=a(4164),s=a(3104),d=a(6347),i=a(205),o=a(7485),c=a(1682),l=a(9466);function g(t){return n.Children.toArray(t).filter((t=>"\n"!==t)).map((t=>{if(!t||(0,n.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(t){const{values:e,children:a}=t;return(0,n.useMemo)((()=>{const t=e??function(t){return g(t).map((t=>{let{props:{value:e,label:a,attributes:n,default:r}}=t;return{value:e,label:a,attributes:n,default:r}}))}(a);return function(t){const e=(0,c.X)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,a])}function m(t){let{value:e,tabValues:a}=t;return a.some((t=>t.value===e))}function h(t){let{queryString:e=!1,groupId:a}=t;const r=(0,d.W6)(),s=function(t){let{queryString:e=!1,groupId:a}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,o.aZ)(s),(0,n.useCallback)((t=>{if(!s)return;const e=new URLSearchParams(r.location.search);e.set(s,t),r.replace({...r.location,search:e.toString()})}),[s,r])]}function p(t){const{defaultValue:e,queryString:a=!1,groupId:r}=t,s=u(t),[d,o]=(0,n.useState)((()=>function(t){let{defaultValue:e,tabValues:a}=t;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=a.find((t=>t.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:e,tabValues:s}))),[c,g]=h({queryString:a,groupId:r}),[p,f]=function(t){let{groupId:e}=t;const a=function(t){return t?`docusaurus.tab.${t}`:null}(e),[r,s]=(0,l.Dv)(a);return[r,(0,n.useCallback)((t=>{a&&s.set(t)}),[a,s])]}({groupId:r}),k=(()=>{const t=c??p;return m({value:t,tabValues:s})?t:null})();(0,i.A)((()=>{k&&o(k)}),[k]);return{selectedValue:d,selectValue:(0,n.useCallback)((t=>{if(!m({value:t,tabValues:s}))throw new Error(`Can't select invalid tab value=${t}`);o(t),g(t),f(t)}),[g,f,s]),tabValues:s}}var f=a(2303);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=a(4848);function T(t){let{className:e,block:a,selectedValue:n,selectValue:d,tabValues:i}=t;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),l=t=>{const e=t.currentTarget,a=o.indexOf(e),r=i[a].value;r!==n&&(c(e),d(r))},g=t=>{let e=null;switch(t.key){case"Enter":l(t);break;case"ArrowRight":{const a=o.indexOf(t.currentTarget)+1;e=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(t.currentTarget)-1;e=o[a]??o[o.length-1];break}}e?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},e),children:i.map((t=>{let{value:e,label:a,attributes:s}=t;return(0,b.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:t=>o.push(t),onKeyDown:g,onClick:l,...s,className:(0,r.A)("tabs__item",k.tabItem,s?.className,{"tabs__item--active":n===e}),children:a??e},e)}))})}function v(t){let{lazy:e,children:a,selectedValue:r}=t;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const t=s.find((t=>t.props.value===r));return t?(0,n.cloneElement)(t,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map(((t,e)=>(0,n.cloneElement)(t,{key:e,hidden:t.props.value!==r})))})}function x(t){const e=p(t);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",k.tabList),children:[(0,b.jsx)(T,{...t,...e}),(0,b.jsx)(v,{...t,...e})]})}function A(t){const e=(0,f.A)();return(0,b.jsx)(x,{...t,children:g(t.children)},String(e))}},8453:(t,e,a)=>{a.d(e,{R:()=>d,x:()=>i});var n=a(6540);const r={},s=n.createContext(r);function d(t){const e=n.useContext(s);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:d(t.components),n.createElement(s.Provider,{value:e},t.children)}}}]);